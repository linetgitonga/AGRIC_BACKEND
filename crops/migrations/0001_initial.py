# Generated by Django 5.1 on 2025-04-28 15:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='crops/')),
                ('growing_season', models.CharField(blank=True, max_length=100, null=True)),
                ('average_yield', models.FloatField(blank=True, help_text='Average yield per acre', null=True)),
                ('growing_time', models.IntegerField(blank=True, help_text='Days to harvest', null=True)),
                ('min_temperature', models.FloatField(blank=True, help_text='Minimum temperature in °C', null=True)),
                ('max_temperature', models.FloatField(blank=True, help_text='Maximum temperature in °C', null=True)),
                ('min_rainfall', models.FloatField(blank=True, help_text='Minimum rainfall in mm', null=True)),
                ('max_rainfall', models.FloatField(blank=True, help_text='Maximum rainfall in mm', null=True)),
                ('min_nitrogen', models.FloatField(blank=True, help_text='Minimum nitrogen (N) requirement', null=True)),
                ('max_nitrogen', models.FloatField(blank=True, help_text='Maximum nitrogen (N) tolerance', null=True)),
                ('min_phosphorus', models.FloatField(blank=True, help_text='Minimum phosphorus (P) requirement', null=True)),
                ('max_phosphorus', models.FloatField(blank=True, help_text='Maximum phosphorus (P) tolerance', null=True)),
                ('min_potassium', models.FloatField(blank=True, help_text='Minimum potassium (K) requirement', null=True)),
                ('max_potassium', models.FloatField(blank=True, help_text='Maximum potassium (K) tolerance', null=True)),
                ('min_ph', models.FloatField(blank=True, help_text='Minimum pH level', null=True)),
                ('max_ph', models.FloatField(blank=True, help_text='Maximum pH level', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoilRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('nitrogen', models.FloatField(help_text='Nitrogen (N) content')),
                ('phosphorus', models.FloatField(help_text='Phosphorus (P) content')),
                ('potassium', models.FloatField(help_text='Potassium (K) content')),
                ('ph_level', models.FloatField(help_text='pH level')),
                ('rainfall', models.FloatField(blank=True, help_text='Average rainfall in mm', null=True)),
                ('temperature', models.FloatField(blank=True, help_text='Average temperature in °C', null=True)),
                ('humidity', models.FloatField(blank=True, help_text='Average humidity percentage', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CropRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence_score', models.FloatField(help_text='Confidence score from 0 to 1')),
                ('recommendation_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recommended_crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crops.crop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('soil_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crops.soilrecord')),
            ],
        ),
    ]
